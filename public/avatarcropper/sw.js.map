{"mappings":"AAAA,IAAIA,QAAU,SAUdC,eAAeC,cACX,IAAIC,QAAaC,OAAOD,OACxB,IAAK,IAAIE,KAAOF,EACRE,GAAOL,eACDI,OAAOE,OAAOD,EAEhC,CAEAJ,eAAeM,cAAcC,GAEzB,GADU,IAAIC,IAAID,EAAIE,KACdC,QAAUC,KAAKC,SAASF,OAC5B,aAAaG,MAAMN,GAEvB,IAAIO,QAAcX,OAAOY,KAAKhB,SAC1BiB,QAAcF,EAAME,MAAMT,GAC9B,GAAIS,EAAO,OAAOA,EAElB,IAAIC,QAAYJ,MAAMN,GAEtB,OADIU,EAAIC,IAAoB,KAAdD,EAAIE,cAAqBL,EAAMM,IAAIb,EAAKU,EAAII,SACnDJ,CACX,CA5BAN,KAAKW,iBAAiB,YAAY,SAASC,GACvCA,EAAEC,UAAUvB,cAChB,IAEAU,KAAKW,iBAAiB,SAAS,SAASC,GACpCA,EAAEE,YAAYnB,cAAciB,EAAEG,SAClC","sources":["src/sw.js"],"sourcesContent":["var VERSION = \"v2.1.2\";\n\nself.addEventListener(\"activate\", function(e) {\n    e.waitUntil(clearCaches());\n});\n\nself.addEventListener(\"fetch\", function(e) {\n    e.respondWith(fetchAndCache(e.request));\n});\n\nasync function clearCaches() {\n    var keys = await caches.keys();\n    for (let key of keys) {\n        if (key != VERSION)\n            await caches.delete(key);\n    }\n}\n\nasync function fetchAndCache(req) {\n    var url = new URL(req.url);\n    if (url.origin != self.location.origin)\n        return await fetch(req);\n\n    var cache = await caches.open(VERSION);\n    var match = await cache.match(req);\n    if (match) return match;\n    \n    var res = await fetch(req);\n    if (res.ok && res.status != 206) await cache.put(req, res.clone());\n    return res;\n}"],"names":["VERSION","async","clearCaches","keys","caches","key","delete","fetchAndCache","req","URL","url","origin","self","location","fetch","cache","open","match","res","ok","status","put","clone","addEventListener","e","waitUntil","respondWith","request"],"version":3,"file":"sw.js.map"}