{"mappings":"ACAA,IAAI,EAAU,UAUd,eAAe,IAEX,IAAK,IAAI,IADE,CAAA,MAAM,OAAO,IAAI,EAA5B,EAEQ,GAAO,GACP,MAAM,OAAO,MAAM,CAAC,EAEhC,CAEA,eAAe,EAAc,CAAG,EAE5B,GAAI,AADM,IAAI,IAAI,EAAI,GAAG,EACjB,MAAM,EAAI,KAAK,QAAQ,CAAC,MAAM,CAClC,OAAO,MAAM,MAAM,GAEvB,IAAI,EAAQ,MAAM,OAAO,IAAI,CAAC,GAC1B,EAAQ,MAAM,EAAM,KAAK,CAAC,GAC9B,GAAI,EAAO,OAAO,EAElB,IAAI,EAAM,MAAM,MAAM,GAEtB,OADI,EAAI,EAAE,EAAI,AAAc,KAAd,EAAI,MAAM,EAAS,MAAM,EAAM,GAAG,CAAC,EAAK,EAAI,KAAK,IACxD,CACX,CA5BA,KAAK,gBAAgB,CAAC,WAAY,SAAS,CAAC,EACxC,EAAE,SAAS,CAAC,IAChB,GAEA,KAAK,gBAAgB,CAAC,QAAS,SAAS,CAAC,EACrC,EAAE,WAAW,CAAC,EAAc,EAAE,OAAO,EACzC","sources":["<anon>","src/sw.js"],"sourcesContent":["var VERSION = \"v2.1.3c\";\nself.addEventListener(\"activate\", function(e) {\n    e.waitUntil(clearCaches());\n});\nself.addEventListener(\"fetch\", function(e) {\n    e.respondWith(fetchAndCache(e.request));\n});\nasync function clearCaches() {\n    var keys = await caches.keys();\n    for (let key of keys)if (key != VERSION) await caches.delete(key);\n}\nasync function fetchAndCache(req) {\n    var url = new URL(req.url);\n    if (url.origin != self.location.origin) return await fetch(req);\n    var cache = await caches.open(VERSION);\n    var match = await cache.match(req);\n    if (match) return match;\n    var res = await fetch(req);\n    if (res.ok && res.status != 206) await cache.put(req, res.clone());\n    return res;\n}\n\n//# sourceMappingURL=sw.js.map\n","var VERSION = \"v2.1.3c\";\n\nself.addEventListener(\"activate\", function(e) {\n    e.waitUntil(clearCaches());\n});\n\nself.addEventListener(\"fetch\", function(e) {\n    e.respondWith(fetchAndCache(e.request));\n});\n\nasync function clearCaches() {\n    var keys = await caches.keys();\n    for (let key of keys) {\n        if (key != VERSION)\n            await caches.delete(key);\n    }\n}\n\nasync function fetchAndCache(req) {\n    var url = new URL(req.url);\n    if (url.origin != self.location.origin)\n        return await fetch(req);\n\n    var cache = await caches.open(VERSION);\n    var match = await cache.match(req);\n    if (match) return match;\n    \n    var res = await fetch(req);\n    if (res.ok && res.status != 206) await cache.put(req, res.clone());\n    return res;\n}"],"names":["VERSION","clearCaches","key","caches","keys","delete","fetchAndCache","req","url","URL","origin","self","location","fetch","cache","open","match","res","ok","status","put","clone","addEventListener","e","waitUntil","respondWith","request"],"version":3,"file":"sw.js.map"}